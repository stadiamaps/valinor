name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-15, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: taiki-e/install-action@nextest

    - name: Build workspace
      run: cargo build --verbose

    - name: Run tests
      run: cargo nextest run --no-fail-fast

    - name: Install big-endian toolchain (s390x)
      if: matrix.os == 'ubuntu-latest'
      run: rustup target add s390x-unknown-linux-gnu

    - name: Run tests (big-endian s390x)
      if: matrix.os == 'ubuntu-latest'
      run: cargo nextest run --no-fail-fast --target s390x-unknown-linux-gnu

    - name: Install Miri
      run: rustup +nightly component add miri

    - name: Run tests in Miri
      run: cargo +nightly miri nextest run --no-fail-fast
      env:
        RUST_BACKTRACE: 1
        MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-env-forward=RUST_BACKTRACE

    - name: Install nightly big-endian toolchain (s390x)
      if: matrix.os == 'ubuntu-latest'
      run: rustup +nightly target add s390x-unknown-linux-gnu

    - name: Run tests in Miri (big-endian s390x)
      if: matrix.os == 'ubuntu-latest'
      run: cargo +nightly miri nextest run --no-fail-fast --target s390x-unknown-linux-gnu
      env:
        RUST_BACKTRACE: 1
        MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-env-forward=RUST_BACKTRACE

    - name: Build valhalla-graphtile in isolation (default feature flags)
      run: cargo build -p valhalla-graphtile

    - name: Build valhalla-graphtile in isolation (optional features)
      run: cargo build -p valhalla-graphtile --features serde
