mod proto;

pub use proto::*;

// Re-export protobuf lib (for the traits)
pub use prost;

pub fn add(left: u64, right: u64) -> u64 {
    left + right
}

#[cfg(test)]
mod tests {
    use super::*;
    use prost::Message;

    #[test]
    fn decode_api_message() {
        const MESSAGE: &[u8] = &[
            0xa, 0x43, 0x12, 0x5, 0x65, 0x6e, 0x2d, 0x55, 0x53, 0x40, 0xc, 0x50, 0x0, 0x58, 0x0,
            0x6a, 0xf, 0x8, 0x0, 0x12, 0xb, 0xa, 0x3, 0xb8, 0x3, 0x0, 0x1a, 0x4, 0x6e, 0x6f, 0x6e,
            0x65, 0xb8, 0x1, 0x0, 0xc5, 0x1, 0x0, 0x0, 0x80, 0x3f, 0xd0, 0x1, 0x0, 0xa8, 0x2, 0x0,
            0xb8, 0x2, 0x0, 0xc8, 0x2, 0x0, 0xe0, 0x2, 0x1, 0x80, 0x3, 0x0, 0x90, 0x3, 0x0, 0xb0,
            0x3, 0xff, 0xff, 0xff, 0xff, 0xf, 0x22, 0xa3, 0x1, 0x32, 0x5, 0x33, 0x2e, 0x35, 0x2e,
            0x31, 0x38, 0xee, 0xc5, 0xc4, 0xc5, 0x6, 0x42, 0x6, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
            0x42, 0x8, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x69, 0x64, 0x42, 0x9, 0x65, 0x78, 0x70,
            0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
            0x74, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x10, 0x74,
            0x72, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
            0x73, 0x42, 0xb, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65,
            0x42, 0x9, 0x69, 0x73, 0x6f, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x65, 0x42, 0xf, 0x6f, 0x70,
            0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x42,
            0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x61,
            0x72, 0x67, 0x65, 0x74, 0x73, 0x42, 0x6, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x5,
            0x72, 0x6f, 0x75, 0x74, 0x65, 0x42, 0x6, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
        ];
        let result = Api::decode(MESSAGE).expect("Failed to decode message");

        if !cfg!(miri) {
            insta::assert_debug_snapshot!(result);
        }
    }
}
